==38486== Memcheck, a memory error detector
==38486== Copyright (C) 2002-2017, and GNU GPL'd, by Julian Seward et al.
==38486== Using Valgrind-3.15.0-608cb11914-20190413 and LibVEX; rerun with -h for copyright info
==38486== Command: ./app/shell-app
==38486== 
--38486-- Valgrind options:
--38486--    --leak-check=full
--38486--    -v
--38486-- Contents of /proc/version:
--38486--   Linux version 5.15.0-46-generic (buildd@lcy02-amd64-007) (gcc (Ubuntu 9.4.0-1ubuntu1~20.04.1) 9.4.0, GNU ld (GNU Binutils for Ubuntu) 2.34) #49~20.04.1-Ubuntu SMP Thu Aug 4 19:15:44 UTC 2022
--38486-- 
--38486-- Arch and hwcaps: AMD64, LittleEndian, amd64-cx16-lzcnt-rdtscp-sse3-ssse3-avx-avx2-bmi-f16c-rdrand
--38486-- Page sizes: currently 4096, max supported 4096
--38486-- Valgrind library directory: /usr/lib/x86_64-linux-gnu/valgrind
--38486-- Reading syms from /home/harika/trial/trial_2/cpp-boilerplate/build/app/shell-app
--38486-- Reading syms from /usr/lib/x86_64-linux-gnu/ld-2.31.so
--38486--   Considering /usr/lib/debug/.build-id/45/87364908de169dec62ffa538170118c1c3a078.debug ..
--38486--   .. build-id is valid
--38486-- Reading syms from /usr/lib/x86_64-linux-gnu/valgrind/memcheck-amd64-linux
--38486--    object doesn't have a symbol table
--38486--    object doesn't have a dynamic symbol table
--38486-- Scheduler: using generic scheduler lock implementation.
--38486-- Reading suppressions file: /usr/lib/x86_64-linux-gnu/valgrind/default.supp
==38486== embedded gdbserver: reading from /tmp/vgdb-pipe-from-vgdb-to-38486-by-harika-on-???
==38486== embedded gdbserver: writing to   /tmp/vgdb-pipe-to-vgdb-from-38486-by-harika-on-???
==38486== embedded gdbserver: shared mem   /tmp/vgdb-pipe-shared-mem-vgdb-38486-by-harika-on-???
==38486== 
==38486== TO CONTROL THIS PROCESS USING vgdb (which you probably
==38486== don't want to do, unless you know exactly what you're doing,
==38486== or are doing some strange experiment):
==38486==   /usr/lib/x86_64-linux-gnu/valgrind/../../bin/vgdb --pid=38486 ...command...
==38486== 
==38486== TO DEBUG THIS PROCESS USING GDB: start GDB like this
==38486==   /path/to/gdb ./app/shell-app
==38486== and then give GDB the following command
==38486==   target remote | /usr/lib/x86_64-linux-gnu/valgrind/../../bin/vgdb --pid=38486
==38486== --pid is optional if only one valgrind process is running
==38486== 
--38486-- REDIR: 0x4022e20 (ld-linux-x86-64.so.2:strlen) redirected to 0x580c9ce2 (???)
--38486-- REDIR: 0x4022bf0 (ld-linux-x86-64.so.2:index) redirected to 0x580c9cfc (???)
--38486-- Reading syms from /usr/lib/x86_64-linux-gnu/valgrind/vgpreload_core-amd64-linux.so
--38486--    object doesn't have a symbol table
--38486-- Reading syms from /usr/lib/x86_64-linux-gnu/valgrind/vgpreload_memcheck-amd64-linux.so
--38486--    object doesn't have a symbol table
==38486== WARNING: new redirection conflicts with existing -- ignoring it
--38486--     old: 0x04022e20 (strlen              ) R-> (0000.0) 0x580c9ce2 ???
--38486--     new: 0x04022e20 (strlen              ) R-> (2007.0) 0x0483f060 strlen
--38486-- REDIR: 0x401f600 (ld-linux-x86-64.so.2:strcmp) redirected to 0x483ffd0 (strcmp)
--38486-- REDIR: 0x4023380 (ld-linux-x86-64.so.2:mempcpy) redirected to 0x4843a20 (mempcpy)
--38486-- Reading syms from /usr/lib/x86_64-linux-gnu/libstdc++.so.6.0.28
--38486--    object doesn't have a symbol table
--38486-- Reading syms from /usr/lib/x86_64-linux-gnu/libgcc_s.so.1
--38486--    object doesn't have a symbol table
--38486-- Reading syms from /usr/lib/x86_64-linux-gnu/libc-2.31.so
--38486--   Considering /usr/lib/debug/.build-id/18/78e6b475720c7c51969e69ab2d276fae6d1dee.debug ..
--38486--   .. build-id is valid
--38486-- Reading syms from /usr/lib/x86_64-linux-gnu/libm-2.31.so
--38486--   Considering /usr/lib/debug/.build-id/fe/91b4090ea04c1559ff71dd9290062776618891.debug ..
--38486--   .. build-id is valid
--38486-- REDIR: 0x4b27480 (libc.so.6:memmove) redirected to 0x48311d0 (_vgnU_ifunc_wrapper)
--38486-- REDIR: 0x4b26780 (libc.so.6:strncpy) redirected to 0x48311d0 (_vgnU_ifunc_wrapper)
--38486-- REDIR: 0x4b277b0 (libc.so.6:strcasecmp) redirected to 0x48311d0 (_vgnU_ifunc_wrapper)
--38486-- REDIR: 0x4b260a0 (libc.so.6:strcat) redirected to 0x48311d0 (_vgnU_ifunc_wrapper)
--38486-- REDIR: 0x4b267e0 (libc.so.6:rindex) redirected to 0x48311d0 (_vgnU_ifunc_wrapper)
--38486-- REDIR: 0x4b28c50 (libc.so.6:rawmemchr) redirected to 0x48311d0 (_vgnU_ifunc_wrapper)
--38486-- REDIR: 0x4b43ce0 (libc.so.6:wmemchr) redirected to 0x48311d0 (_vgnU_ifunc_wrapper)
--38486-- REDIR: 0x4b43820 (libc.so.6:wcscmp) redirected to 0x48311d0 (_vgnU_ifunc_wrapper)
--38486-- REDIR: 0x4b275e0 (libc.so.6:mempcpy) redirected to 0x48311d0 (_vgnU_ifunc_wrapper)
--38486-- REDIR: 0x4b27410 (libc.so.6:bcmp) redirected to 0x48311d0 (_vgnU_ifunc_wrapper)
--38486-- REDIR: 0x4b26710 (libc.so.6:strncmp) redirected to 0x48311d0 (_vgnU_ifunc_wrapper)
--38486-- REDIR: 0x4b26150 (libc.so.6:strcmp) redirected to 0x48311d0 (_vgnU_ifunc_wrapper)
--38486-- REDIR: 0x4b27540 (libc.so.6:memset) redirected to 0x48311d0 (_vgnU_ifunc_wrapper)
--38486-- REDIR: 0x4b437e0 (libc.so.6:wcschr) redirected to 0x48311d0 (_vgnU_ifunc_wrapper)
--38486-- REDIR: 0x4b26670 (libc.so.6:strnlen) redirected to 0x48311d0 (_vgnU_ifunc_wrapper)
--38486-- REDIR: 0x4b26230 (libc.so.6:strcspn) redirected to 0x48311d0 (_vgnU_ifunc_wrapper)
--38486-- REDIR: 0x4b27800 (libc.so.6:strncasecmp) redirected to 0x48311d0 (_vgnU_ifunc_wrapper)
--38486-- REDIR: 0x4b261d0 (libc.so.6:strcpy) redirected to 0x48311d0 (_vgnU_ifunc_wrapper)
--38486-- REDIR: 0x4b27950 (libc.so.6:memcpy@@GLIBC_2.14) redirected to 0x48311d0 (_vgnU_ifunc_wrapper)
--38486-- REDIR: 0x4b44f50 (libc.so.6:wcsnlen) redirected to 0x48311d0 (_vgnU_ifunc_wrapper)
--38486-- REDIR: 0x4b43860 (libc.so.6:wcscpy) redirected to 0x48311d0 (_vgnU_ifunc_wrapper)
--38486-- REDIR: 0x4b26820 (libc.so.6:strpbrk) redirected to 0x48311d0 (_vgnU_ifunc_wrapper)
--38486-- REDIR: 0x4b26100 (libc.so.6:index) redirected to 0x48311d0 (_vgnU_ifunc_wrapper)
--38486-- REDIR: 0x4b26630 (libc.so.6:strlen) redirected to 0x48311d0 (_vgnU_ifunc_wrapper)
--38486-- REDIR: 0x4b2fbb0 (libc.so.6:memrchr) redirected to 0x48311d0 (_vgnU_ifunc_wrapper)
--38486-- REDIR: 0x4b27850 (libc.so.6:strcasecmp_l) redirected to 0x48311d0 (_vgnU_ifunc_wrapper)
--38486-- REDIR: 0x4b273d0 (libc.so.6:memchr) redirected to 0x48311d0 (_vgnU_ifunc_wrapper)
--38486-- REDIR: 0x4b43930 (libc.so.6:wcslen) redirected to 0x48311d0 (_vgnU_ifunc_wrapper)
--38486-- REDIR: 0x4b26ae0 (libc.so.6:strspn) redirected to 0x48311d0 (_vgnU_ifunc_wrapper)
--38486-- REDIR: 0x4b27750 (libc.so.6:stpncpy) redirected to 0x48311d0 (_vgnU_ifunc_wrapper)
--38486-- REDIR: 0x4b276f0 (libc.so.6:stpcpy) redirected to 0x48311d0 (_vgnU_ifunc_wrapper)
--38486-- REDIR: 0x4b28c90 (libc.so.6:strchrnul) redirected to 0x48311d0 (_vgnU_ifunc_wrapper)
--38486-- REDIR: 0x4b278a0 (libc.so.6:strncasecmp_l) redirected to 0x48311d0 (_vgnU_ifunc_wrapper)
--38486-- REDIR: 0x4c0f500 (libc.so.6:__strrchr_avx2) redirected to 0x483ea10 (rindex)
--38486-- REDIR: 0x4b210e0 (libc.so.6:malloc) redirected to 0x483b780 (malloc)
--38486-- REDIR: 0x4c0f6d0 (libc.so.6:__strlen_avx2) redirected to 0x483ef40 (strlen)
--38486-- REDIR: 0x4c0bcc0 (libc.so.6:__memcmp_avx2_movbe) redirected to 0x48421e0 (bcmp)
--38486-- REDIR: 0x4c0abd0 (libc.so.6:__strcmp_avx2) redirected to 0x483fed0 (strcmp)
--38486-- REDIR: 0x4c126c0 (libc.so.6:__mempcpy_avx_unaligned_erms) redirected to 0x4843660 (mempcpy)
--38486-- REDIR: 0x4934b20 (libstdc++.so.6:operator new(unsigned long)) redirected to 0x483bdf0 (operator new(unsigned long))
Averaged sensor reading: 10
==38486== Conditional jump or move depends on uninitialised value(s)
==38486==    at 0x10A31B: main (main.cpp:9)
==38486== 
--38486-- REDIR: 0x4b216d0 (libc.so.6:free) redirected to 0x483c9d0 (free)
==38486== 
==38486== HEAP SUMMARY:
==38486==     in use at exit: 44 bytes in 2 blocks
==38486==   total heap usage: 4 allocs, 2 frees, 76,844 bytes allocated
==38486== 
==38486== Searching for pointers to 2 not-freed blocks
==38486== Checked 111,480 bytes
==38486== 
==38486== 44 (24 direct, 20 indirect) bytes in 1 blocks are definitely lost in loss record 2 of 2
==38486==    at 0x483BE63: operator new(unsigned long) (in /usr/lib/x86_64-linux-gnu/valgrind/vgpreload_memcheck-amd64-linux.so)
==38486==    by 0x10A46E: AnalogSensor::Read() (AnalogSensor.cpp:16)
==38486==    by 0x10A2F7: main (main.cpp:7)
==38486== 
==38486== LEAK SUMMARY:
==38486==    definitely lost: 24 bytes in 1 blocks
==38486==    indirectly lost: 20 bytes in 1 blocks
==38486==      possibly lost: 0 bytes in 0 blocks
==38486==    still reachable: 0 bytes in 0 blocks
==38486==         suppressed: 0 bytes in 0 blocks
==38486== 
==38486== Use --track-origins=yes to see where uninitialised values come from
==38486== ERROR SUMMARY: 2 errors from 2 contexts (suppressed: 0 from 0)
==38486== 
==38486== 1 errors in context 1 of 2:
==38486== Conditional jump or move depends on uninitialised value(s)
==38486==    at 0x10A31B: main (main.cpp:9)
==38486== 
==38486== ERROR SUMMARY: 2 errors from 2 contexts (suppressed: 0 from 0)
